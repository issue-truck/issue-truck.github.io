{"pageProps":{"post":{"title":"제품의 최적점을 찾아라","description":"","date":"2024-05-16 11:11","slug":"2024-05-16-Hittheproductsweetspot","content":"\n\n전통적으로 대부분의 회사에서 비즈니스 팀은 자신들의 필요에 따라 거의 모든 기능을 우선 순위를 매기고 정의합니다. 하지만 현실은 모든 사람이 애자일 또는 리안이라고 주장하지만 실제로는 엔지니어에게 이르기까지 워터폴 방식을 따르고 있는 것이 현실입니다.\n\n![이미지 1](/assets/img/2024-05-16-Hittheproductsweetspot_0.png)\n\n![이미지 2](/assets/img/2024-05-16-Hittheproductsweetspot_1.png)\n\n일반적으로 이 구조를 따르는 타임라인은 다음과 같습니다:\n\n\n\n월간[들]:\n이 단계에서 이해관계자들은 아이디어를 발전시킨 후 제품 매니저와 함께 사용자 스토리, 시나리오 및 명세와 같은 요구 사항을 설정합니다. 이러한 문서는 디자이너와 엔지니어들에게 무엇을 구축해야 하는지 안내하는 목적으로 사용됩니다.\n\n주간[들]:\n코딩을 진행하기로 결정하면, 프로덕트 디자이너에게 막대기가 넘겨집니다. 디자이너로서, 데이터 분석가들과 협업하는 것을 좋아합니다. 사용성 테스트를 진행하고 '왜'를 이해하는 것... 그러나 종종 시간이 너무 짧아서 이상적인 프로세스를 단 몇 일 안에 요약하거나 타협을 해야 할 때가 있습니다.\n\n수개월[들]:\n이 모든 것이 마지막에 엔지니어들에게 전달됩니다. 그들은 작업을 완료하기 위해 애자일 방식으로 작업합니다.\n\n몇 일[들]:\n마지막으로, 품질 보증(QA) 테스트 및 배포합니다.\n\n\n\n이 방법은 매출 또는 이해관계자 중심 제품을 유도하며, 이들은 종종 이를 개발하는 데 필요한 비용을 몰라합니다. 대부분의 숙련된 엔지니어는 심지어 이 단계에서 추정조차 거부하지만, 일부는 예전의 티셔츠 사이징 절충안인 작은, 중간, 큰 또는 매우 큰을 강요받습니다.\n\n그리고 1년 내내 수차례 반복되는 로드맵들이 있습니다. 마케팅은 이 캠페인을 가지고 있고, 이 제품은 출시되어야 하며, 자사 브랜드나 경쟁사가 이를 출시합니다. 누군가는 결제 통합을 원합니다. 아이디어를 얻으셨나요?\n\n![Producing the Product Sweet Spot](/assets/img/2024-05-16-Hittheproductsweetspot_2.png)\n\n## 협업\n\n\n\n디자이너들은 종종 프로세스가 너무 늦게 진행되어 진정한 가치를 제공할 기회를 잃을 때가 많습니다. 대신, 그들은 종종 단순히 \"뱀에게 립스틱 바르기\"를 요청받을 때가 많아요.\n\n과거에 이해관계자들이 판매량을 증가시킬 것으로 믿는 기능을 몇 달 동안 밀어붙인 사례를 목격했습니다. 그러나 예상했던 결과를 얻지 못했어요. 물리적 매장에서는 좋아 보일 수도 있지만, 디지털 채널로 잘 전환이 되지 않았죠. 사용자 경험 테스트에서 빨간 깃발이 나타났음에도 제품 출시를 이어나갔습니다.\n\n엔지니어들에게도 동일한 원칙이 적용돼요. 코딩에만 활용한다면, 그들의 잠재력의 반만 활용하고 있습니다.\n\n![이미지](/assets/img/2024-05-16-Hittheproductsweetspot_3.png)\n\n\n\n제품이 실패하면, 팀들이 보통 그것을 개선하고 사용자가 좋아할 만한 변화를 만들기 위해 점진적인 변화에 집중하는 것이 일반적이지만, 처음부터 구현할 가치가 있는지 의문을 제기하는 것이 중요합니다.\n\n유의미한 결정을 내리고 제품 개선을 이끌기 위해 왜(qualitative)와 무엇(quantitative) 데이터가 모두 필요합니다. 이 협력적이고 데이터 기반의 방법은 성공적이고 사용자 중심적인 제품을 만들 확률을 높여줍니다.\n\n## 결론\n\n![이미지](/assets/img/2024-05-16-Hittheproductsweetspot_4.png)\n\n\n\n일반적인 프로세스는 종종 위험이 올바르게 대응되지 않아 고객 검증이 늦게 일어나게 됩니다. 대신에 위험을 미리 대응하는 대신 처음부터 디자이너와 엔지니어를 포함시키는 것이 중요합니다.\n\n다음은 고려해야 할 몇 가지 중요한 포인트입니다:\n\n- 처음부터 디자이너와 엔지니어를 포함하세요: 프로세스 초반에 그들을 참여시킴으로써, 그들의 전문지식에 기반하여 가치 있는 통찰을 개발 여정 전체에 반영할 수 있습니다.\n- 자체 디자인 아이디어를 디자이너에게 제공하지 마세요: 대신에 그들에게 도전을 스스로 해결할 공간을 제공하세요. 디자이너는 혁신적인 해결책으로 이끌 수 있는 독특한 시각과 전문성을 제공합니다. 그들의 기술을 신뢰하고 다양한 가능성을 발견할 수 있도록 허용하세요.\n- 반복을 장려하세요: 디자이너와 엔지니어는 프로세스 전반에 걸쳐 피드백과 통찰을 바탕으로 작업을 반복하고 개선하는 것이 중요합니다. 반복은 문제를 발견하고 대응하여 더 나은 결과를 이끌어냅니다.\n- 디자이너와 엔지니어를 파트너로 간주하세요: 그들을 순차적이나 분리된 개념으로 다루는 것 대신, 협력적인 파트너로 간주하세요. 디자이너와 엔지니어가 아이디어와 전문성을 기여하여 성공적인 제품을 만들 수 있는 협력과 개방적인 의사소통 문화를 격려하세요.\n\n이러한 원칙을 따르면 보다 협력적이고 효율적인 프로세스를 유도하여 고객 검증이 조기에 통합되고 위험이 사후에 대응되는 것이 아닌 예방적으로 대응되도록 할 수 있습니다.\n\n\n\n## 추천 도서\n\n![book cover](/assets/img/2024-05-16-Hittheproductsweetspot_5.png)\n\n- Marty Cagan의 Inspired\n- Eric Ries의 The Lean Startup\n- Ryan Singer의 Shape up\n- Jeff Gothelf와 Josh Seiden의 Lean UX","ogImage":{"url":"/assets/img/2024-05-16-Hittheproductsweetspot_0.png"},"coverImage":"/assets/img/2024-05-16-Hittheproductsweetspot_0.png","tag":["Tech"],"readingTime":3},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"전통적으로 대부분의 회사에서 비즈니스 팀은 자신들의 필요에 따라 거의 모든 기능을 우선 순위를 매기고 정의합니다. 하지만 현실은 모든 사람이 애자일 또는 리안이라고 주장하지만 실제로는 엔지니어에게 이르기까지 워터폴 방식을 따르고 있는 것이 현실입니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-16-Hittheproductsweetspot_0.png\",\n        alt: \"이미지 1\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-16-Hittheproductsweetspot_1.png\",\n        alt: \"이미지 2\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"일반적으로 이 구조를 따르는 타임라인은 다음과 같습니다:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"월간[들]:\\n이 단계에서 이해관계자들은 아이디어를 발전시킨 후 제품 매니저와 함께 사용자 스토리, 시나리오 및 명세와 같은 요구 사항을 설정합니다. 이러한 문서는 디자이너와 엔지니어들에게 무엇을 구축해야 하는지 안내하는 목적으로 사용됩니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"주간[들]:\\n코딩을 진행하기로 결정하면, 프로덕트 디자이너에게 막대기가 넘겨집니다. 디자이너로서, 데이터 분석가들과 협업하는 것을 좋아합니다. 사용성 테스트를 진행하고 '왜'를 이해하는 것... 그러나 종종 시간이 너무 짧아서 이상적인 프로세스를 단 몇 일 안에 요약하거나 타협을 해야 할 때가 있습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"수개월[들]:\\n이 모든 것이 마지막에 엔지니어들에게 전달됩니다. 그들은 작업을 완료하기 위해 애자일 방식으로 작업합니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"몇 일[들]:\\n마지막으로, 품질 보증(QA) 테스트 및 배포합니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이 방법은 매출 또는 이해관계자 중심 제품을 유도하며, 이들은 종종 이를 개발하는 데 필요한 비용을 몰라합니다. 대부분의 숙련된 엔지니어는 심지어 이 단계에서 추정조차 거부하지만, 일부는 예전의 티셔츠 사이징 절충안인 작은, 중간, 큰 또는 매우 큰을 강요받습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"그리고 1년 내내 수차례 반복되는 로드맵들이 있습니다. 마케팅은 이 캠페인을 가지고 있고, 이 제품은 출시되어야 하며, 자사 브랜드나 경쟁사가 이를 출시합니다. 누군가는 결제 통합을 원합니다. 아이디어를 얻으셨나요?\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-16-Hittheproductsweetspot_2.png\",\n        alt: \"Producing the Product Sweet Spot\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"협업\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"디자이너들은 종종 프로세스가 너무 늦게 진행되어 진정한 가치를 제공할 기회를 잃을 때가 많습니다. 대신, 그들은 종종 단순히 \\\"뱀에게 립스틱 바르기\\\"를 요청받을 때가 많아요.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"과거에 이해관계자들이 판매량을 증가시킬 것으로 믿는 기능을 몇 달 동안 밀어붙인 사례를 목격했습니다. 그러나 예상했던 결과를 얻지 못했어요. 물리적 매장에서는 좋아 보일 수도 있지만, 디지털 채널로 잘 전환이 되지 않았죠. 사용자 경험 테스트에서 빨간 깃발이 나타났음에도 제품 출시를 이어나갔습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"엔지니어들에게도 동일한 원칙이 적용돼요. 코딩에만 활용한다면, 그들의 잠재력의 반만 활용하고 있습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-16-Hittheproductsweetspot_3.png\",\n        alt: \"이미지\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"제품이 실패하면, 팀들이 보통 그것을 개선하고 사용자가 좋아할 만한 변화를 만들기 위해 점진적인 변화에 집중하는 것이 일반적이지만, 처음부터 구현할 가치가 있는지 의문을 제기하는 것이 중요합니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"유의미한 결정을 내리고 제품 개선을 이끌기 위해 왜(qualitative)와 무엇(quantitative) 데이터가 모두 필요합니다. 이 협력적이고 데이터 기반의 방법은 성공적이고 사용자 중심적인 제품을 만들 확률을 높여줍니다.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"결론\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-16-Hittheproductsweetspot_4.png\",\n        alt: \"이미지\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"일반적인 프로세스는 종종 위험이 올바르게 대응되지 않아 고객 검증이 늦게 일어나게 됩니다. 대신에 위험을 미리 대응하는 대신 처음부터 디자이너와 엔지니어를 포함시키는 것이 중요합니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"다음은 고려해야 할 몇 가지 중요한 포인트입니다:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"처음부터 디자이너와 엔지니어를 포함하세요: 프로세스 초반에 그들을 참여시킴으로써, 그들의 전문지식에 기반하여 가치 있는 통찰을 개발 여정 전체에 반영할 수 있습니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"자체 디자인 아이디어를 디자이너에게 제공하지 마세요: 대신에 그들에게 도전을 스스로 해결할 공간을 제공하세요. 디자이너는 혁신적인 해결책으로 이끌 수 있는 독특한 시각과 전문성을 제공합니다. 그들의 기술을 신뢰하고 다양한 가능성을 발견할 수 있도록 허용하세요.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"반복을 장려하세요: 디자이너와 엔지니어는 프로세스 전반에 걸쳐 피드백과 통찰을 바탕으로 작업을 반복하고 개선하는 것이 중요합니다. 반복은 문제를 발견하고 대응하여 더 나은 결과를 이끌어냅니다.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"디자이너와 엔지니어를 파트너로 간주하세요: 그들을 순차적이나 분리된 개념으로 다루는 것 대신, 협력적인 파트너로 간주하세요. 디자이너와 엔지니어가 아이디어와 전문성을 기여하여 성공적인 제품을 만들 수 있는 협력과 개방적인 의사소통 문화를 격려하세요.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이러한 원칙을 따르면 보다 협력적이고 효율적인 프로세스를 유도하여 고객 검증이 조기에 통합되고 위험이 사후에 대응되는 것이 아닌 예방적으로 대응되도록 할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"추천 도서\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-16-Hittheproductsweetspot_5.png\",\n        alt: \"book cover\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Marty Cagan의 Inspired\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Eric Ries의 The Lean Startup\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Ryan Singer의 Shape up\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Jeff Gothelf와 Josh Seiden의 Lean UX\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}