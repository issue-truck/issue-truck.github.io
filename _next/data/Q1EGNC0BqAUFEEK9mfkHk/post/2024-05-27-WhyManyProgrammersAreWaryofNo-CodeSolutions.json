{"pageProps":{"post":{"title":"왜 많은 프로그래머들이 노코드 솔루션을 의심하는지","description":"","date":"2024-05-27 20:59","slug":"2024-05-27-WhyManyProgrammersAreWaryofNo-CodeSolutions","content":"\n\n## 프로그래밍\n\n<img src=\"/assets/img/2024-05-27-WhyManyProgrammersAreWaryofNo-CodeSolutions_0.png\" />\n\n그들은 TV 해설자들처럼 권위주의적인 거짓말을 하는 가짜 전문가가 아니라, 하루하루 열심히 열일하여 다양한 소프트웨어 기술을 결합하여 무언가를 이루는 실제 전문가들입니다. 그들은 이를 몇 년 동안 매일 하고 있습니다.\n\n노코드 도구가 잘 만들어졌다고 해도, 그것이 할 수 있는 것의 한계는 너무 얕아 우리가 할 역할이 없는 것처럼 느껴질 정도로 얕다고 말할 수는 없지만, 장난감인 것은 아닙니다.\n\n<div class=\"content-ad\"></div>\n\n위의 내용을 친근한 톤으로 한국어로 번역해 드리겠습니다:\n\n일자리가 노코드를 최대한 활용하는 것에 관련되어 있다면 프로그래머가 필요할 수도 있습니다. 노코드에 추가 모듈을 제공하는 것이 일자리에 관련된 경우, 역시 프로그래머가 필요할 수 있습니다. 그러나 이러한 상황들은 비교적 드물어 보입니다.\n\n노코드 도구를 만들 수 있는 프로그래머들은 동료 프로그래머들로부터 존경을 받을 만한 훌륭한 작업을 하고 있습니다.\n\n그러나 노코드 도구들은 아마추어를 위해 설계되었기 때문에 프로그래머들로서 사용자로서는 그다지 중요하지 않습니다. 중요하지 않다고 느껴지거나 상관이 없을지도 모르겠습니다.\n\n예를 들기는 어려운데, 노코드 도구가 구입하여 그대로 조립하고 팔다리를 움직여서 포즈를 취하는 건담 플라스틱 모델과 같다면, 모델을 형상화하거나 차고 키트라고 할 수 있는 것이라면, 우리 프로그래머로서의 일은 매우 다른 모양으로 무언가를 만들어내는 것이라고 할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n전문 조각가가 특정 반다이 건담 모델의 품질에 특별한 의견을 가질 필요가 없을 것 같고 별로 신경 쓰지 않을 것 같아요.\n\n또는 실제로 플라스틱 모델을 만드는 사람들일까요? 안 돼요. 제가 잘 알지 못하는 것들을 예시로 사용하는 것은 아예 좋지 않은 것 같아요.\n\n## 실제 예시\n\nExcel과 Google 스프레드시트는 복잡한 처리를 수행할 수 있어 비즈니스 응용 프로그램 플랫폼이라고 할 수 있어요. 원하는 대로 달성하기 위해 \"수식\"을 널리 사용하는 도구들은 완료될 때 이런 것을 고려할 수 있는 코드 필요 없는 도구로 간주될 수 있어요.\n\n<div class=\"content-ad\"></div>\n\n비 프로그래머들은 계산 공식이 복잡해서 계산이 느리거나 논리가 명확해야 할 때 어려움을 겪기도 하지만, 결국 그들이 다룰 수 있는 복잡성에는 한계가 있다고 느껴집니다.\n\n프로그래머들은 VBA나 Google 앱 스크립트를 사용하여 더 이해하기 쉬운 계산을 만들고, 공식을 만지지 않고도 복잡성을 숨길 수 있습니다.\n\n프로그램은 그것을 읽을 수 없는 사람들에겐 혼란스러울 수 있지만, 프로그램 코드는 공식보다 개선하거나 수정할 수 있는 사람들에게 더 쉬운 것입니다.\n\n노코드 유형의 공식을 사용하지 않고 프로그램을 작성하는 것이 더 나은 것입니다. 과거에는 \"코딩 없이\" 또는 \"코드를 줄인 상태로\" 처리를 할 수 있게 한 솔루션이 여러 번 등장했었죠, 엑셀이나 스프레드시트와 같은 것들이 말이죠.\n\n<div class=\"content-ad\"></div>\n\n프로그래머들은 노코드(또는 로우코드)의 한계를 잘 알고 있어요. 그래서 노코드는 많은 관심이나 흥미를 끌지 못하고, 그런 면에서 진지한 프로그래머일수록 더 부정적으로 느낄 것입니다.\n\n그냥 알려드릴게요, 엑셀과 스프레드시트 같은 것들은 노코드 도구로서 매우 높은 품질로 제작되었어요. 수식을 이용해서 많은 작업을 할 수 있지만, 뿐만 아니라 프로그램 코드로 더 정밀하게 제어할 수도 있고, 거의 제한 없이 개발을 진행할 수 있어요. 이것이 바로 궁극적인 노코드 도구이며, 노코드로 효율적이라고 말해지는 대부분의 작업은 이미 여기서도 수행할 수 있어요.\n\n노코드가 보다 보편화되더라도, 프로그래머에 대한 수요가 어떠한 방식으로든 줄지 않을 것이라고 생각해요.\n\n# 간단한 용어로 설명 🚀\n\n<div class=\"content-ad\"></div>\n\nIn Plain English 커뮤니티에 참여해 주셔서 감사합니다! 떠나시기 전에:\n\n- 작가에게 박수를 보내고 팔로우해주세요 👏\n- 팔로우하기: X | LinkedIn | YouTube | Discord | Newsletter\n- 다른 플랫폼 방문하기: Stackademic | CoFeed | Venture | Cubed\n- 알고리즘 콘텐츠로 고생하시는 블로깅 플랫폼에 지친 적이 있나요? Differ를 한번 시도해보세요!\n- 더 많은 콘텐츠는 PlainEnglish.io에서 확인하세요.","ogImage":{"url":"/assets/img/2024-05-27-WhyManyProgrammersAreWaryofNo-CodeSolutions_0.png"},"coverImage":"/assets/img/2024-05-27-WhyManyProgrammersAreWaryofNo-CodeSolutions_0.png","tag":["Tech"],"readingTime":3},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<h2>프로그래밍</h2>\n<p>그들은 TV 해설자들처럼 권위주의적인 거짓말을 하는 가짜 전문가가 아니라, 하루하루 열심히 열일하여 다양한 소프트웨어 기술을 결합하여 무언가를 이루는 실제 전문가들입니다. 그들은 이를 몇 년 동안 매일 하고 있습니다.</p>\n<p>노코드 도구가 잘 만들어졌다고 해도, 그것이 할 수 있는 것의 한계는 너무 얕아 우리가 할 역할이 없는 것처럼 느껴질 정도로 얕다고 말할 수는 없지만, 장난감인 것은 아닙니다.</p>\n<p>위의 내용을 친근한 톤으로 한국어로 번역해 드리겠습니다:</p>\n<p>일자리가 노코드를 최대한 활용하는 것에 관련되어 있다면 프로그래머가 필요할 수도 있습니다. 노코드에 추가 모듈을 제공하는 것이 일자리에 관련된 경우, 역시 프로그래머가 필요할 수 있습니다. 그러나 이러한 상황들은 비교적 드물어 보입니다.</p>\n<p>노코드 도구를 만들 수 있는 프로그래머들은 동료 프로그래머들로부터 존경을 받을 만한 훌륭한 작업을 하고 있습니다.</p>\n<p>그러나 노코드 도구들은 아마추어를 위해 설계되었기 때문에 프로그래머들로서 사용자로서는 그다지 중요하지 않습니다. 중요하지 않다고 느껴지거나 상관이 없을지도 모르겠습니다.</p>\n<p>예를 들기는 어려운데, 노코드 도구가 구입하여 그대로 조립하고 팔다리를 움직여서 포즈를 취하는 건담 플라스틱 모델과 같다면, 모델을 형상화하거나 차고 키트라고 할 수 있는 것이라면, 우리 프로그래머로서의 일은 매우 다른 모양으로 무언가를 만들어내는 것이라고 할 수 있습니다.</p>\n<p>전문 조각가가 특정 반다이 건담 모델의 품질에 특별한 의견을 가질 필요가 없을 것 같고 별로 신경 쓰지 않을 것 같아요.</p>\n<p>또는 실제로 플라스틱 모델을 만드는 사람들일까요? 안 돼요. 제가 잘 알지 못하는 것들을 예시로 사용하는 것은 아예 좋지 않은 것 같아요.</p>\n<h2>실제 예시</h2>\n<p>Excel과 Google 스프레드시트는 복잡한 처리를 수행할 수 있어 비즈니스 응용 프로그램 플랫폼이라고 할 수 있어요. 원하는 대로 달성하기 위해 \"수식\"을 널리 사용하는 도구들은 완료될 때 이런 것을 고려할 수 있는 코드 필요 없는 도구로 간주될 수 있어요.</p>\n<p>비 프로그래머들은 계산 공식이 복잡해서 계산이 느리거나 논리가 명확해야 할 때 어려움을 겪기도 하지만, 결국 그들이 다룰 수 있는 복잡성에는 한계가 있다고 느껴집니다.</p>\n<p>프로그래머들은 VBA나 Google 앱 스크립트를 사용하여 더 이해하기 쉬운 계산을 만들고, 공식을 만지지 않고도 복잡성을 숨길 수 있습니다.</p>\n<p>프로그램은 그것을 읽을 수 없는 사람들에겐 혼란스러울 수 있지만, 프로그램 코드는 공식보다 개선하거나 수정할 수 있는 사람들에게 더 쉬운 것입니다.</p>\n<p>노코드 유형의 공식을 사용하지 않고 프로그램을 작성하는 것이 더 나은 것입니다. 과거에는 \"코딩 없이\" 또는 \"코드를 줄인 상태로\" 처리를 할 수 있게 한 솔루션이 여러 번 등장했었죠, 엑셀이나 스프레드시트와 같은 것들이 말이죠.</p>\n<p>프로그래머들은 노코드(또는 로우코드)의 한계를 잘 알고 있어요. 그래서 노코드는 많은 관심이나 흥미를 끌지 못하고, 그런 면에서 진지한 프로그래머일수록 더 부정적으로 느낄 것입니다.</p>\n<p>그냥 알려드릴게요, 엑셀과 스프레드시트 같은 것들은 노코드 도구로서 매우 높은 품질로 제작되었어요. 수식을 이용해서 많은 작업을 할 수 있지만, 뿐만 아니라 프로그램 코드로 더 정밀하게 제어할 수도 있고, 거의 제한 없이 개발을 진행할 수 있어요. 이것이 바로 궁극적인 노코드 도구이며, 노코드로 효율적이라고 말해지는 대부분의 작업은 이미 여기서도 수행할 수 있어요.</p>\n<p>노코드가 보다 보편화되더라도, 프로그래머에 대한 수요가 어떠한 방식으로든 줄지 않을 것이라고 생각해요.</p>\n<h1>간단한 용어로 설명 🚀</h1>\n<p>In Plain English 커뮤니티에 참여해 주셔서 감사합니다! 떠나시기 전에:</p>\n<ul>\n<li>작가에게 박수를 보내고 팔로우해주세요 👏</li>\n<li>팔로우하기: X | LinkedIn | YouTube | Discord | Newsletter</li>\n<li>다른 플랫폼 방문하기: Stackademic | CoFeed | Venture | Cubed</li>\n<li>알고리즘 콘텐츠로 고생하시는 블로깅 플랫폼에 지친 적이 있나요? Differ를 한번 시도해보세요!</li>\n<li>더 많은 콘텐츠는 PlainEnglish.io에서 확인하세요.</li>\n</ul>\n</body>\n</html>\n"},"__N_SSG":true}